{"levels":[{"board":["[_, _, _]"],"goal":["[STAR, RECT, TRIANGLE]"],"toolbox":["STAR","RECT","TRIANGLE","CIRCLE","9"],"syntax":[],"defines":[],"globals":{},"hideGlobals":[],"input":[],"output":[],"textgoal":["Try filling in the empty slots in that list."]},{"board":["[_, _]","[1]","[TRIANGLE, CIRCLE]","function getFirst(a) {return get(a,0);}","function removeFirst(a) {return length(a) < 2 ? []: slice(a, 1, length(a))}"],"goal":["STAR","[]","CIRCLE"],"toolbox":["STAR","RECT","removeFirst","getFirst","removeFirst","getFirst"],"syntax":[],"defines":[],"globals":{},"hideGlobals":[],"input":[],"output":[]},{"board":["[1]","map(_, addOne)","__note('`map` applies a function to every element in a list and returns a new list\\n\\n`concat` joins two lists together into a new list')","concat(_, _)"],"goal":["[2,4,5,1]"],"toolbox":["[4]","[1,3, _]","[2,4]","STAR","[5]","4"],"syntax":[],"defines":[],"globals":{"addOne":"function addOne(number) { return (number + 1); }"},"hideGlobals":[],"input":[],"output":[]},{"board":["function contains(list, target, index){ return  _ (index) ? false : ((_ == _) ? true : ( contains(list, index + 1, target))); }","__note('Contains should return true if `list` contains `target`, and false otherwise ')"],"goal":[false,true],"toolbox":["contains","contains","length","list","get(list, index)","target","index => (index == (_) (_))","[6,7,9,12]","[12,9,7,6]",0,4,11,12,0],"syntax":[],"defines":[],"globals":{},"hideGlobals":[],"input":[],"output":[],"textgoal":["'contains takes three arguments, a list, a target, and a index. What value should `index` have at the start?'"]},{"board":["__note('`getIndex` should return the index at which `target` appears in `list`, or -1 if `target` is not found.')","function getIndex(list,target,index){ return (_ (_)) ? -1 : ((_ (_) (_) (_)) ? _ : (getIndex(_, _, (_ + 1)))); }","x => (x == (_) (_))","function isTarget(list,target,index) {return ( (_(_,_)) == _ );}"],"goal":[2],"toolbox":["getIndex","isTarget","__unlimited;list","__unlimited;target","__unlimited;index","length","get","[7,9,2,5,18]",0,1,2],"syntax":[],"defines":[],"globals":{},"hideGlobals":[],"input":[],"output":[],"textgoal":["Remember the recursive structure of the contains function."]}],"name":"Lists / Strings / Recursion"}
