name: Lists / Strings / Recursion
levels:
  - board:
      - '[_, _, _]'
      - __note('This is a list. As you can see, its empty. Try placing objects in it!')
    toolbox:
      - STAR
      - RECT
      - TRIANGLE
      - CIRCLE
      - '9'
    hint:
      - null
    goal:
      - '[STAR, RECT, TRIANGLE]'
    defines: []
  - board:
      - '[_, _]'
      - '[1]'
      - '[TRIANGLE, CIRCLE]'
      - 'function head(a) {return get(a,0);}'
      - >-
        function removeFirst(a) {return length(a) < 2 ? []: slice(a, 1,
        length(a))}
      - >- 
        __note('Check out these functions. One of them returns the first element
        in a list, and one removes the first element.')
    toolbox:
      - STAR
      - RECT
      - removeFirst
      - head
      - removeFirst
      - head
    note:
      - null
    goal:
      - STAR
      - '[]'
      - CIRCLE
  - board:
      - '[1]'
      - 'map(_, addOne)'
      - >-
        __note('This is map. Map applies a function to every element in a list')
      - >-
        __note('This is concat. It joins two lists together.')
      - concat(_, _)
    toolbox:
      - '[4]'
      - '[1,3, _]'
      - '[2,4]'
      - STAR
      - '[5]'
      - '4'
    globals:
      add : 
        addOne : 'function addOne(number) { return (number + 1); }'
      hide : []
    note:
      - null
    goal:
      - '[2,4,5,1]'
    

