board,goal,toolbox,defines,globals,textgoal,note
"[""function concatStrings(a,b) { return  (a) + (b); }"",""\""Computer\""""]","[""\""ComputerScience\""""]","[""concatStrings"",""\""Science\""""]",[],{},Define a function to concatenate two strings,
"[""\""coffee\"""",""\""chocolates\"""",""function reverseString(str) {return str == \""\"" ? \""\"" : reverseString(slice(str,1, length(str))) + get(str,0);}""]","[""\""eeffocsetalocohc\""""]","[""reverseString"",""(_) + (_)""]","[""function reverseString(str) {return str == \""\"" ? \""\"" : (x => reverseString(slice(str,1, length(str))) + x)(get(str,0));}""]",{},Define a function that reverses a string,
"[""function checkPalindrome(str) { return  ((str) == (_)) ? (true) : (false); }"",""\""ababa\"""",""\""abcd\"""",""str""]","[true,false]","[""reverseString"",""__unlimited;checkPalindrome""]",[],{},Define a function that checks if  string is a palindrome,
"[""\""ooooompalooooompa\"""",""\""ooooompalooooompa\"""",""function countAs(str,char,counter) { return  ((str) == (\""\"")) ? (counter) : (((get(str, 0)) == (char)) ? (countAs(slice(str, 1, length(str)), char, (counter) + (1))) : (countAs(slice(str, 1, length(str)), char, counter))); }""]","[10,2]","[""__unlimited;countAs"",""__unlimited;0"",""__unlimited;1"",""\""o\"""",""\""m\"""",""\""p\"""",""\""a\"""",""\""l\""""]",[],{},Define a function that counts the occurences of a given character,
