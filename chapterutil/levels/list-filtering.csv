board,goal,textgoal,toolbox,defines,globals,syntax,animationScales,comments
"['[_,_,_]']","['[3,4,5]']","In the next levels, we will be filtering lists. Take a look at the list in the toolbox. As warm up, let's build a new list that only contains the numbers from it bigger than 2. Be sure to keep the list in order.","['[1,2,3,4,5]','1','2','3','4','5']",[],{},[],{}
"['function filter(list,cond) { return  (isEmpty(list)) ? ([]) : ((((cond)(head(list))) == (true)) ? (cons(head(list), filter(tail(list), cond))) : (filter(tail(list), f))); }','(e) => (e) == (1)','(e) => (e) > (1)','(e) => (e) > (5)']","['[1]','[2,3,4]','[]']","We can use a filter function that only keeps items that makes a condition true. Check it out!","['__unlimited; [1,2,3,4]','__unlimited; filter']","['function filter(list,f) { return  ((list) == ([])) ? ([]) : ((((f)(head(list))) == (true)) ? (cons(head(list), filter(tail(list), f))) : (filter(tail(list), f))); }']",{},{}
"['filter','filter','num','function biggerThanZero(num) { return  _; }']","['[]','[3,2,1]']","Let's try keeping all the items that are bigger than zero in the lists. Use the biggerThanZero function as the condition.","['(_) > (0)','__unlimited; biggerThanZero','[0,3,2,1]','[0,0,0,0]']",{},{}
"['function isTrue(value) { return (_) == true; }','[false,false,false,true]','[false,false,true,false]','[false]']","['[]','[true]','[true]']","Let's keep only the True items in the lists.","['__unlimited; filter','__unlimited; isTrue','value']",{},{}
"['function keepOnlyTrue(list) { return  _; }','(x) => _','[false,false,false,true]','[false,false,true,false]','[false]']","['[]','[true]','[true]']","Like before, let's keep only the True items in the lists. But instead, we will build a new function that uses filter.","['x','filter','list','__unlimited; keepOnlyTrue','(_) == (true)']",{},{}
"['function removeFace(list,face){ return _;}','list','""游땴""','""游때""','[""游때"",""游땴"",""游땴"",""游때"",""游때"",""游땴""]']","['[]']","We can also use filter to remove a specific kind of item from the list.","['face','__unlimited; removeFace','x => !(x == _)','filter']",{},{}
"['function my_filter(list,cond) { return  _; }','[]','(isEmpty(list)) ? (_) : (((cond)(_)) ? (cons(_, my_filter(_, cond))) : (my_filter(_, cond)))']","['[2]']","Now, let's trying completing our own filter function.","['__unlimited; my_filter','(e) => (e) == (2)','__unlimited; head(list)','__unlimited; tail(list)','[1,2,3]']",{},{}
"['(x) => (x) == (2)','function my_filter(list,cond) { return  _; }','[]','(isEmpty(list)) ? (_) : ((_) ? (cons(_, my_filter(_, _))) : (my_filter(_, _)))']","['[2]']","Let's complete this filter function.","['__unlimited; my_filter','__unlimited; head(list)','__unlimited; tail(list)','[1,2,3]','(cond)(_)','__unlimited; cond']",{},{}