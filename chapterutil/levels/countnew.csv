board,goal,textgoal,toolbox,defines,globals,syntax,animationScales
"['function remove_first(a) {return length(a) < 2 ? [] : slice(a, 1, length(a))}', 'function count(a) {return (a == []) ? 0: count(remove_first(a)) + 1}', '[A, A, A, A]']",['4'],Let's count to 4,['count'],"['function remove_first(a) {return length(a) < 2 ? [] : slice(a, 1, length(a))}']",[],[],{}
"['function remove_first(a) {return length(a) < 2 ? []: slice(a, 1, length(a))}', 'function count(a) {return (a == _) ? _: count(remove_first(a)) + 1}']",['0'],Can you count a list with no items in it? ,"['count', 'remove_first', '0', '[]', '[]', '[A]']",,[],[],{}
"['function remove_first(a) {return length(a) < 2 ? [] : slice(a, 1, length(a))}', 'function count(a) {return (a == []) ? 0: _ + _}']",['3'],Let's count to 3!,"['count', 'remove_first', '1', '[B, B, B]']",,[],[],{}
"['function remove_first(a) {return length(a) < 2 ? [] : slice(a, 1, length(a))}', 'function count(a) {return (a == _) ? _ : _ + _}', 'count']",['4'],Can you count a mixed list,"['remove_first', 'count', '0', '1', 'a', '[A, B, C, A]']",,[],[],{}
"['function first(a) {return get(a,0)}', 'function remove_first(a) {return length(a) < 2 ? []: slice(a, 1, length(a))}', 'function count_target(a, target) {(a == []) ? 0: (first(a) == target) ? count_target(remove_first(a), target) + 1: count_target(remove_first(a), target)}']",['3'],Can you count only one type of object? ,"['count_target', 'A', 'B', '[A, B, A, A]']","['function count_target(a, target) {(a == []_ ? 0: (first(a) == target) ? count_target(remove_first(a), target) + 1: count_target(remove_first(a), target)}']",[],[],{}
"['function first(a) {return get(a,0)}', 'function remove_first(a) {return length(a) < 2 ? []: slice(a, 1, length(a))}', 'function count_target(a, target) {(_ == _) ? _: (first(a) == target) ? count_target(remove_first(a), target) + 1: count_target(remove_first(a), target)}']",['0'],Let's count a list of 0!,"['count_target', 'A', 'B', '0', '1', '[]', '[]', 'a']",,[],[],{}
"['function first(a) {return get(a,0)}', 'function remove_first(a) {return length(a) < 2 ? []: slice(a, 1, length(a))}', 'function count_target(a, target) {(a == []) ? a: (_ == _) ? count_target(remove_first(a), target) + 1: count_target(remove_first(a), target)}']",['1'],Can you count to 1? ,"['count_target', 'first', 'remove_first', 'a', 'target', '[B, A, A]', 'B']",,[],[],{}
"['function first(a) {return get(a,0)}', 'function remove_first(a) {return length(a) < 2 ? []: slice(a, 1, length(a))}', 'function count_target(a, target) {(a == []) ? a: (first(a) == target) ? _ + _: count_target(remove_first(a), target)}']",['4'],Can we still count this list? ,"['first', 'remove_first', '0', '1', 'a', 'target', 'count_target', 'target']",,[],[],{}
"['function first(a) {return get(a,0)}', 'function remove_first(a) {return length(a) < 2 ? []: slice(a, 1, length(a))}', 'function count_target(a, target) {(a == []) ? a: (first(a) == target) ? count_target(remove_first(a), target) + 1: _}']",['2'],Can you fill out the bottom part? ,"['0', '1', 'target', 'a', 'target', 'remove_first', 'first', 'count_target']",,[],[],{}
"['function first(a) {return get(a,0)}', 'function remove_first(a) {return length(a) < 2 ? []: slice(a, 1, length(a))}', 'function count_target(a, target) {(a == []) ? a: (first(a) == target) ? count_target(remove_first(a), target) + 1: _}']",,,,,,,
