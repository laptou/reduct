board,goal,toolbox,defines,globals,textgoal,note
"[""mon == mon"",""_ == tue""]","[true,false]","[""tue"",""sat"",""sun""]",[],{},,
"[""function isSameDay(x, y) { return _; }"",""_ == _"",""__tests(testMe(sat, sat), testMe(mon, tue))""]","[true,false]","[""x"",""x"",""y"",""y"",""__unlimited; isSameDay;""]",[],{},"Define a function that outputs true if the x and y are the same weekday, otherwise false",
"[""function isMonday(x) {return _; }"",""__tests(testMe(mon), testMe(tue))""]","[true,false]","[""x == _"",""mon"",""tue"",""__unlimited; isMonday;""]","[""function isMonday(x) { return x == mon }""]",{},"Define a function that outputs true if x is Monday, otherwise false",
"[""function isFriday(x) {return _; }"",""__tests(testMe(mon), testMe(fri))""]","[false,true]","[""_ == _"",""x"",""mon"",""tue"",""fri"",""sat"",""__unlimited; isFriday;""]","[""function isFriday(x) { return x == fri }""]",{},"Define a function that outputs true if x is Friday, otherwise false",
"[""function isMondayOrFriday(x) {return isMonday(_) ? true : _ ; }"",""x"",""isFriday(_)"",""__tests(testMe(mon), testMe(tue), testMe(fri), testMe(sun))""]","[true,true,false,false]","[""mon"",""tue"",true,false,""x"",""__unlimited; isMondayOrFriday;""]",[],{},"Define a function that outputs true if x is Monday or Friday, otherwise false",
"[""function isMondayOrFriday(x) {return _; }"",""isFriday(_) ? _ : _"",""x"",""__tests(testMe(mon), testMe(tue), testMe(fri), testMe(sun))""]","[true,true,false,false]","[""isMonday"",""isFriday"",""mon"",""tue"",true,false,""x"",""__unlimited; isMondayOrFriday;""]",[],{},"Define a function that outputs true if x is Monday or Friday, otherwise false",
"[""function isWeekend(x) {return _; }"",""_ ? _ : _"",""x == _"",""__tests(testMe(sat), testMe(tue), testMe(mon), testMe(sun))""]","[true,false,false,true]","[""sat"",""sun"",""mon"",""tue"",true,false,""x"",""_ == _"",""__unlimited; isWeekend;""]","[""function isWeekend(x) { return x == sat ? true : x == sun }""]",{},"Define a function that outputs true if x is the weekend, otherwise false",
"[""function isWeekday(x) {return isWeekend ? false : _; }"",""__tests(testMe(sat), testMe(tue), testMe(mon), testMe(sun))""]","[false,true,true,false]","[""isWeekend"",""sat"",""sun"",""mon"",""tue"",true,false,""x""]",[],{},"Define a function that outputs true if x is one of the weekdays, otherwise false",
"[""function isWeekday(x) {return _; }"",""_ ? _ : _"",""__tests(testMe(sat), testMe(tue), testMe(mon), testMe(sun))""]","[false,true,true,false]","[""isWeekend"",""sat"",""sun"",""mon"",""tue"",true,false,""x"",""_ == _"",""__unlimited; isWeekday;""]",[],{},"Define a function that outputs true if x is one of the weekdays, otherwise false",
"[""function tomorrow(day) {return _;}"",""{ day == mon ? tue : (day == tue ? wed : (day == wed ? thu : (day == thu ? fri : (day == fri ? sat : (day == sat ? sun : mon))))); }""]","[""tue"",""sun""]","[""mon"",""wed"",""tue"",""thu"",""sat"",""__unlimited; tomorrow;""]",[],{},Define the function tomorrow to compute the next day of any given day,
"[""function yesterday(day) {return _;}"",""{day == mon ? sun : (day == tue ? mon : (day == wed ? tue : (day == thu ? wed : (day == fri ? thu : (day == sat ? fri : sat))))); }""]","[""tue"",""sun""]","[""mon"",""wed"",""tue"",""thu"",""sat"",""__unlimited; yesterday;""]",[],{},Define the function yesterday to compute the previous day of any given day,
"[""tomorrow(_)"",""yesterday(_)""]","[""tue"",""tue""]","[""mon"",""wed"",""tue"",""thu""]","[""function tomorrow(x) { return x == mon ? tue : (x == tue ? wed : (x == wed ? thu : (x == thu ? fri : (x == fri ? sat : (x == sat ? sun : mon))))); }"",""function yesterday(x) { return x == mon ? sun : (x == tue ? mon : (x == wed ? tue : (x == thu ? wed : (x == fri ? thu : (x == sat ? fri : sat))))); }""]","{""tomorrow"":""function tomorrow(x) { return x == mon ? tue : (x == tue ? wed : (x == wed ? thu : (x == thu ? fri : (x == fri ? sat : (x == sat ? sun : mon))))); }"",""yesterday"":""function yesterday(x) { return x == mon ? sun : (x == tue ? mon : (x == wed ? tue : (x == thu ? wed : (x == fri ? thu : (x == sat ? fri : sat))))); }""}",,
